% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/autoxgboost.R
\name{autoxgboost_space}
\alias{autoxgboost_space}
\title{Get an xgboost Search Space and Learner}
\usage{
autoxgboost_space(task, par.set = "unmixed", predict.type = "response",
  max.nrounds = 1e+06, early.stopping.rounds = 10,
  early.stopping.fraction = 4/5, impact.encoding.boundary = 10,
  nthread = NULL, tune.threshold = TRUE, emulate_exactly = TRUE)
}
\arguments{
\item{task\cr}{The task.}

\item{par.set\cr}{Which paramset to use. either \dQuote{unmixed} (default) or \dQuote{mixed} (larger parameter set) but with param dependencies.}

\item{predict.type\cr}{Predict type. One of \dQuote{prob}, \dQuote{response} (default). Only \dQuote{response} supported for regression tasks.}

\item{max.nrounds\cr}{Maximum number of allowed boosting iterations. Default is \code{10^6}.}

\item{early.stopping.rounds\cr}{After how many iterations without an improvement in the boosting OOB error should be stopped?
Default is \code{10}.}

\item{early.stopping.fraction\cr}{What fraction of the data should be used for early stopping (i.e. as a validation set).
Default is \code{4/5}.}

\item{impact.encoding.boundary\cr}{Defines the threshold on how factor variables are handled. Factors with more levels than the \code{"impact.encoding.boundary"} get impact encoded while factor variables with less or equal levels than the \code{"impact.encoding.boundary"} get dummy encoded.
For \code{impact.encoding.boundary = 0L}, all factor variables get impact encoded while for \code{impact.encoding.boundary = .Machine$integer.max}, all of them get dummy encoded.
Default is \code{10}.}

\item{nthread\cr}{Number of cores to use.
If \code{NULL} (default), xgboost will determine internally how many cores to use.}

\item{tune.threshold\cr}{Should thresholds be tuned? This has only an effect for classification, see \code{\link[mlr]{tuneThreshold}}.
Default is \code{TRUE}. Only \code{FALSE} is supported currently; if this is \code{TRUE} an error is thrown.}

\item{emulate_exactly\cr}{Whether to emulate autoxgboost behaviour for impact.encoding.boundary. Autoxgboost applies the boundary to the *whole* task (behaviour if emulate_exactly==TRUE,
while a more exact approach would be to apply it only to the training set (emulate_exactly==FALSE).}
}
\value{
\code{something}.
}
\description{
An xgboost Learner and ParamSet is created that emulates autoxgboost.
}
